{"version":3,"file":"static/js/847.c3b0136b.chunk.js","mappings":"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","sources":["../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.browser.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js","../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js","../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js","../node_modules/fast-xml-parser/src/fxp.js","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/strnum/strnum.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => ({\n    ...input,\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return {\n        ...config_1,\n    };\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import packageInfo from \"../../../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    name = \"PackedPolicyTooLargeException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    name = \"RegionDisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    name = \"IDPRejectedClaimException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    name = \"InvalidIdentityTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class IDPCommunicationErrorException extends __BaseException {\n    name = \"IDPCommunicationErrorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n","import { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { collectBodyString } from \"../common\";\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        let parsedObj;\n        try {\n            parsedObj = parser.parse(encoded, true);\n        }\n        catch (e) {\n            if (e && typeof e === \"object\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nexport const parseXmlErrorBody = async (errorBody, context) => {\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nexport const loadRestXmlErrorCode = (output, data) => {\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nimport { STSClient } from \"./STSClient\";\nconst commands = {\n    AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand,\n};\nexport class STS extends STSClient {\n}\ncreateAggregatedClient(commands, STS);\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, STSClient) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        if (accountId) {\n            setCredentialFeature(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nconst isH2 = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1);\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\n// const octRegex = /^0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n \nconst consider = {\n    hex :  true,\n    // oct: false,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true,\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    \n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if(str===\"0\") return 0;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return parse_int(trimmedStr, 16);\n    // }else if (options.oct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    }else if (trimmedStr.search(/[eE]/)!== -1) { //eNotation\n        const notation = trimmedStr.match(/^([-\\+])?(0*)([0-9]*(\\.[0-9]*)?[eE][-\\+]?[0-9]+)$/); \n        // +00.123 => [ , '+', '00', '.123', ..\n        if(notation){\n            // console.log(notation)\n            if(options.leadingZeros){ //accept with leading zeros\n                trimmedStr = (notation[1] || \"\") + notation[3];\n            }else{\n                if(notation[2] === \"0\" && notation[3][0]=== \".\"){ //valid number\n                }else{\n                    return str;\n                }\n            }\n            return options.eNotation ? Number(trimmedStr) : str;\n        }else{\n            return str;\n        }\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        // +00.123 => [ , '+', '00', '.123', ..\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else if(options.leadingZeros && leadingZeros===str) return 0; //00\n            \n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    return (numTrimmedByZeros === numStr) || (sign+numTrimmedByZeros === numStr) ? num : str\n                }else  {\n                    return (trimmedStr === numStr) || (trimmedStr === sign+numStr) ? num : str\n                }\n            }\n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\n\nfunction parse_int(numStr, base){\n    //polyfill\n    if(parseInt) return parseInt(numStr, base);\n    else if(Number.parseInt) return Number.parseInt(numStr, base);\n    else if(window && window.parseInt) return window.parseInt(numStr, base);\n    else throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")\n}\n\nmodule.exports = toNumber;"],"names":["defaultSTSHttpAuthSchemeParametersProvider","config","context","input","getSmithyContext","operation","normalizeProvider","region","Error","defaultSTSHttpAuthSchemeProvider","authParameters","options","push","schemeId","signingProperties","name","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","resolveHttpAuthSchemeConfig","config_0","stsClientCtor","STSClient","config_1","resolveAwsSdkSigV4Config","resolveClientEndpointParameters","useDualstackEndpoint","useFipsEndpoint","useGlobalEndpoint","defaultSigningName","commonParams","UseGlobalEndpoint","type","UseFIPS","Endpoint","Region","UseDualStack","F","G","H","I","J","b","c","d","e","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","ruleSet","version","parameters","rules","conditions","endpoint","url","properties","authSchemes","signingName","signingRegion","headers","error","cache","EndpointCache","size","params","defaultEndpointResolver","endpointParams","get","resolveEndpoint","logger","customEndpointFunctions","awsEndpointFunctions","getRuntimeConfig","defaultsMode","resolveDefaultsModeConfig","defaultConfigProvider","then","loadConfigsForDefaultMode","clientSharedValues","apiVersion","base64Decoder","fromBase64","base64Encoder","toBase64","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","NoAuthSigner","NoOpLogger","serviceId","urlParser","parseUrl","utf8Decoder","fromUtf8","utf8Encoder","toUtf8","getSharedRuntimeConfig","runtime","bodyLengthChecker","calculateBodyLength","credentialDefaultProvider","_","Promise","reject","defaultUserAgentProvider","createDefaultUserAgentProvider","clientVersion","packageInfo","maxAttempts","DEFAULT_MAX_ATTEMPTS","invalidProvider","requestHandler","RequestHandler","retryMode","DEFAULT_RETRY_MODE","sha256","Sha256","streamCollector","resolve","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","resolveRuntimeExtensions","runtimeConfig","extensionConfiguration","getAwsRegionExtensionConfiguration","getDefaultExtensionConfiguration","getHttpHandlerExtensionConfiguration","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","getHttpAuthExtensionConfiguration","forEach","extension","configure","resolveAwsRegionExtensionConfiguration","resolveDefaultRuntimeConfig","resolveHttpHandlerRuntimeConfig","configuration","_config_0","__getRuntimeConfig","_config_1","_config_2","resolveUserAgentConfig","_config_3","resolveRetryConfig","_config_4","resolveRegionConfig","_config_5","resolveHostHeaderConfig","_config_6","resolveEndpointConfig","_config_7","_config_8","middlewareStack","use","getUserAgentPlugin","getRetryPlugin","getContentLengthPlugin","getHostHeaderPlugin","getLoggerPlugin","getRecursionDetectionPlugin","getHttpAuthSchemeEndpointRuleSetPlugin","httpAuthSchemeParametersProvider","identityProviderConfigProvider","DefaultIdentityProviderConfig","getHttpSigningPlugin","__Client","STSServiceException","Object","setPrototypeOf","prototype","__ServiceException","CredentialsFilterSensitiveLog","obj","SecretAccessKey","SENSITIVE_STRING","AssumeRoleResponseFilterSensitiveLog","Credentials","ExpiredTokenException","opts","$fault","__BaseException","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","WebIdentityToken","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","IDPCommunicationErrorException","parseXmlBody","streamBody","collectBodyString","encoded","length","parsedObj","parser","XMLParser","attributeNamePrefix","htmlEntities","ignoreAttributes","ignoreDeclaration","parseTagValue","trimValues","tagValueProcessor","val","trim","includes","undefined","addEntity","parse","defineProperty","value","key","keys","parsedObjToReturn","textNodeName","getValueFromTextNode","parseXmlErrorBody","errorBody","message","Message","se_AssumeRoleCommand","SHARED_HEADERS","body","buildFormUrlencodedString","se_AssumeRoleRequest","_A","_AR","_V","buildHttpRpcRequest","se_AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityRequest","_ARWWI","de_AssumeRoleCommand","output","statusCode","de_CommandError","parseBody","data","contents","de_AssumeRoleResponse","AssumeRoleResult","response","$metadata","deserializeMetadata","de_AssumeRoleWithWebIdentityCommand","de_AssumeRoleWithWebIdentityResponse","AssumeRoleWithWebIdentityResult","parseErrorBody","parsedOutput","errorCode","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_IDPCommunicationErrorExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","parsedBody","throwDefaultError","deserialized","de_ExpiredTokenException","exception","__decorateServiceException","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","entries","_RA","_RSN","_PA","memberEntries","se_policyDescriptorListType","PolicyArns","loc","_P","_DS","_T","se_tagListType","Tags","_TTK","se_tagKeyListType","TransitiveTagKeys","_EI","_SN","_TC","_SI","_PC","se_ProvidedContextsListType","ProvidedContexts","_WIT","_PI","counter","entry","se_PolicyDescriptorType","_a","se_ProvidedContext","_PAr","_CA","se_Tag","_K","_Va","de_AssumedRoleUser","_ARI","__expectString","_Ar","_C","de_Credentials","_ARU","_PPS","__strictParseInt32","_SFWIT","_Pr","_Au","_AKI","_SAK","_ST","_E","__expectNonNull","__parseRfc3339DateTimeWithOffset","_m","httpStatusCode","requestId","extendedRequestId","cfId","withBaseException","path","resolvedHostname","hostname","protocol","port","basePath","method","endsWith","slice","__HttpRequest","formEntries","map","__extendedEncodeURIComponent","join","Code","AssumeRoleCommand","$Command","ep","Command","cs","getSerdePlugin","this","serialize","deserialize","getEndpointPlugin","getEndpointParameterInstructions","f","ser","de","build","AssumeRoleWithWebIdentityCommand","commands","STS","createAggregatedClient","ASSUME_ROLE_DEFAULT_REGION","getAccountIdFromAssumedRoleUser","assumedRoleUser","Arn","arnComponents","split","resolveRegion","_region","_parentRegion","credentialProviderLogger","parentRegion","debug","getDefaultRoleAssumer","stsOptions","stsClient","closureSourceCreds","sourceCreds","parentClientConfig","resolvedRegion","isCompatibleRequestHandler","isH2","profile","send","AssumedRoleUser","AccessKeyId","RoleArn","accountId","accessKeyId","secretAccessKey","sessionToken","SessionToken","expiration","Expiration","CredentialScope","credentialScope","setCredentialFeature","getDefaultRoleAssumerWithWebIdentity","metadata","handlerProtocol","getCustomizableStsClientCtor","baseCtor","customizations","customization","stsPlugins","StsGetDefaultRoleAssumer","StsGetDefaultRoleAssumerWithWebIdentity","decorateDefaultCredentialProvider","provider","roleAssumer","roleAssumerWithWebIdentity","validator","require","XMLBuilder","module","exports","XMLValidator","nameStartChar","nameRegexp","regexName","RegExp","isExist","isEmptyObject","merge","target","a","arrayMode","len","getValue","isName","string","match","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","util","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","start","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validate","assign","tags","tagFound","reachedRoot","err","tagStartPos","closingTag","tagName","substring","result","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","code","msg","line","tagClosed","otg","pop","openPos","col","indexOf","afterAmp","validateAmpersand","JSON","stringify","replace","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","hasOwnProperty","re","validateNumberAmpersand","count","lineNumber","lines","buildFromOrderedJs","attributesGroupName","cdataPropName","format","indentBy","suppressEmptyNode","suppressUnpairedNode","suppressBooleanAttributes","attributeValueProcessor","preserveOrder","commentPropName","entities","processEntities","stopNodes","oneListGroup","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","object","level","j2x","buildTextValNode","buildObjectNode","repeat","startsWith","jObj","Array","isArray","arrayNodeName","call","Date","attr","buildAttrPairStr","newval","replaceEntitiesValue","arrLen","listTagVal","listTagAttr","item","textValue","Ks","L","closeTag","tagEndExp","piClosingChar","entity","arrToStr","arr","jPath","indentation","xmlStr","isPreviousElementTag","tagObj","propName","newJPath","newIdentation","attStr","attr_to_str","tagStart","tagValue","tempInd","piTextNodeName","tagText","isStopNode","attrMap","attrVal","lastIndexOf","jArray","readEntityExp","entityName","isComment","isEntity","isElement","isAttlist","isNotation","validateEntityName","hasBody","comment","regx","removeNSPrefix","parseAttributeValue","numberParseOptions","hex","leadingZeros","eNotation","alwaysCreateTextNode","ignorePiTags","transformTagName","transformAttributeName","updateTag","attrs","buildOptions","xmlNode","readDocType","toNumber","OrderedObjParser","currentNode","tagsNodeStack","docTypeEntities","lastEntities","ampEntity","str","String","fromCharCode","Number","parseInt","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","readStopNodeData","saveTextToParentTag","addChild","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","prefix","charAt","attrsRegx","oldVal","aName","newVal","attrCollection","xmlObj","textData","closeIndex","findClosingIndex","colonIndex","lastTagName","propIndex","tagData","readTagExp","childNode","add","tagExp","attrExpPresent","endIndex","rawTagName","lastTag","tagContent","child","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","attrBoundary","closingChar","ch","errMsg","closingIndex","separatorIndex","search","trimStart","openTagCount","shouldParse","prettify","validationOption","toString","orderedObjParser","orderedResult","compress","text","compressedObj","property","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","node","XmlNode","hexRegex","numRegex","consider","decimalPoint","trimZeros","numStr","parse_int","base","window","trimmedStr","skipLike","test","notation","sign","numTrimmedByZeros","num"],"sourceRoot":""}